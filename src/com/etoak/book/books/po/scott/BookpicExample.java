package com.etoak.book.books.po.scott;

import java.util.ArrayList;
import java.util.List;

public class BookpicExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public BookpicExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIDIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIDIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIDEqualTo(String value) {
            addCriterion("ID =", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotEqualTo(String value) {
            addCriterion("ID <>", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThan(String value) {
            addCriterion("ID >", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThan(String value) {
            addCriterion("ID <", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLike(String value) {
            addCriterion("ID like", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotLike(String value) {
            addCriterion("ID not like", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDIn(List<String> values) {
            addCriterion("ID in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotIn(List<String> values) {
            addCriterion("ID not in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andSAVEPATHIsNull() {
            addCriterion("SAVEPATH is null");
            return (Criteria) this;
        }

        public Criteria andSAVEPATHIsNotNull() {
            addCriterion("SAVEPATH is not null");
            return (Criteria) this;
        }

        public Criteria andSAVEPATHEqualTo(String value) {
            addCriterion("SAVEPATH =", value, "SAVEPATH");
            return (Criteria) this;
        }

        public Criteria andSAVEPATHNotEqualTo(String value) {
            addCriterion("SAVEPATH <>", value, "SAVEPATH");
            return (Criteria) this;
        }

        public Criteria andSAVEPATHGreaterThan(String value) {
            addCriterion("SAVEPATH >", value, "SAVEPATH");
            return (Criteria) this;
        }

        public Criteria andSAVEPATHGreaterThanOrEqualTo(String value) {
            addCriterion("SAVEPATH >=", value, "SAVEPATH");
            return (Criteria) this;
        }

        public Criteria andSAVEPATHLessThan(String value) {
            addCriterion("SAVEPATH <", value, "SAVEPATH");
            return (Criteria) this;
        }

        public Criteria andSAVEPATHLessThanOrEqualTo(String value) {
            addCriterion("SAVEPATH <=", value, "SAVEPATH");
            return (Criteria) this;
        }

        public Criteria andSAVEPATHLike(String value) {
            addCriterion("SAVEPATH like", value, "SAVEPATH");
            return (Criteria) this;
        }

        public Criteria andSAVEPATHNotLike(String value) {
            addCriterion("SAVEPATH not like", value, "SAVEPATH");
            return (Criteria) this;
        }

        public Criteria andSAVEPATHIn(List<String> values) {
            addCriterion("SAVEPATH in", values, "SAVEPATH");
            return (Criteria) this;
        }

        public Criteria andSAVEPATHNotIn(List<String> values) {
            addCriterion("SAVEPATH not in", values, "SAVEPATH");
            return (Criteria) this;
        }

        public Criteria andSAVEPATHBetween(String value1, String value2) {
            addCriterion("SAVEPATH between", value1, value2, "SAVEPATH");
            return (Criteria) this;
        }

        public Criteria andSAVEPATHNotBetween(String value1, String value2) {
            addCriterion("SAVEPATH not between", value1, value2, "SAVEPATH");
            return (Criteria) this;
        }

        public Criteria andSHOWNAMEIsNull() {
            addCriterion("SHOWNAME is null");
            return (Criteria) this;
        }

        public Criteria andSHOWNAMEIsNotNull() {
            addCriterion("SHOWNAME is not null");
            return (Criteria) this;
        }

        public Criteria andSHOWNAMEEqualTo(String value) {
            addCriterion("SHOWNAME =", value, "SHOWNAME");
            return (Criteria) this;
        }

        public Criteria andSHOWNAMENotEqualTo(String value) {
            addCriterion("SHOWNAME <>", value, "SHOWNAME");
            return (Criteria) this;
        }

        public Criteria andSHOWNAMEGreaterThan(String value) {
            addCriterion("SHOWNAME >", value, "SHOWNAME");
            return (Criteria) this;
        }

        public Criteria andSHOWNAMEGreaterThanOrEqualTo(String value) {
            addCriterion("SHOWNAME >=", value, "SHOWNAME");
            return (Criteria) this;
        }

        public Criteria andSHOWNAMELessThan(String value) {
            addCriterion("SHOWNAME <", value, "SHOWNAME");
            return (Criteria) this;
        }

        public Criteria andSHOWNAMELessThanOrEqualTo(String value) {
            addCriterion("SHOWNAME <=", value, "SHOWNAME");
            return (Criteria) this;
        }

        public Criteria andSHOWNAMELike(String value) {
            addCriterion("SHOWNAME like", value, "SHOWNAME");
            return (Criteria) this;
        }

        public Criteria andSHOWNAMENotLike(String value) {
            addCriterion("SHOWNAME not like", value, "SHOWNAME");
            return (Criteria) this;
        }

        public Criteria andSHOWNAMEIn(List<String> values) {
            addCriterion("SHOWNAME in", values, "SHOWNAME");
            return (Criteria) this;
        }

        public Criteria andSHOWNAMENotIn(List<String> values) {
            addCriterion("SHOWNAME not in", values, "SHOWNAME");
            return (Criteria) this;
        }

        public Criteria andSHOWNAMEBetween(String value1, String value2) {
            addCriterion("SHOWNAME between", value1, value2, "SHOWNAME");
            return (Criteria) this;
        }

        public Criteria andSHOWNAMENotBetween(String value1, String value2) {
            addCriterion("SHOWNAME not between", value1, value2, "SHOWNAME");
            return (Criteria) this;
        }

        public Criteria andFMIsNull() {
            addCriterion("FM is null");
            return (Criteria) this;
        }

        public Criteria andFMIsNotNull() {
            addCriterion("FM is not null");
            return (Criteria) this;
        }

        public Criteria andFMEqualTo(String value) {
            addCriterion("FM =", value, "FM");
            return (Criteria) this;
        }

        public Criteria andFMNotEqualTo(String value) {
            addCriterion("FM <>", value, "FM");
            return (Criteria) this;
        }

        public Criteria andFMGreaterThan(String value) {
            addCriterion("FM >", value, "FM");
            return (Criteria) this;
        }

        public Criteria andFMGreaterThanOrEqualTo(String value) {
            addCriterion("FM >=", value, "FM");
            return (Criteria) this;
        }

        public Criteria andFMLessThan(String value) {
            addCriterion("FM <", value, "FM");
            return (Criteria) this;
        }

        public Criteria andFMLessThanOrEqualTo(String value) {
            addCriterion("FM <=", value, "FM");
            return (Criteria) this;
        }

        public Criteria andFMLike(String value) {
            addCriterion("FM like", value, "FM");
            return (Criteria) this;
        }

        public Criteria andFMNotLike(String value) {
            addCriterion("FM not like", value, "FM");
            return (Criteria) this;
        }

        public Criteria andFMIn(List<String> values) {
            addCriterion("FM in", values, "FM");
            return (Criteria) this;
        }

        public Criteria andFMNotIn(List<String> values) {
            addCriterion("FM not in", values, "FM");
            return (Criteria) this;
        }

        public Criteria andFMBetween(String value1, String value2) {
            addCriterion("FM between", value1, value2, "FM");
            return (Criteria) this;
        }

        public Criteria andFMNotBetween(String value1, String value2) {
            addCriterion("FM not between", value1, value2, "FM");
            return (Criteria) this;
        }

        public Criteria andBOOKIDIsNull() {
            addCriterion("BOOKID is null");
            return (Criteria) this;
        }

        public Criteria andBOOKIDIsNotNull() {
            addCriterion("BOOKID is not null");
            return (Criteria) this;
        }

        public Criteria andBOOKIDEqualTo(String value) {
            addCriterion("BOOKID =", value, "BOOKID");
            return (Criteria) this;
        }

        public Criteria andBOOKIDNotEqualTo(String value) {
            addCriterion("BOOKID <>", value, "BOOKID");
            return (Criteria) this;
        }

        public Criteria andBOOKIDGreaterThan(String value) {
            addCriterion("BOOKID >", value, "BOOKID");
            return (Criteria) this;
        }

        public Criteria andBOOKIDGreaterThanOrEqualTo(String value) {
            addCriterion("BOOKID >=", value, "BOOKID");
            return (Criteria) this;
        }

        public Criteria andBOOKIDLessThan(String value) {
            addCriterion("BOOKID <", value, "BOOKID");
            return (Criteria) this;
        }

        public Criteria andBOOKIDLessThanOrEqualTo(String value) {
            addCriterion("BOOKID <=", value, "BOOKID");
            return (Criteria) this;
        }

        public Criteria andBOOKIDLike(String value) {
            addCriterion("BOOKID like", value, "BOOKID");
            return (Criteria) this;
        }

        public Criteria andBOOKIDNotLike(String value) {
            addCriterion("BOOKID not like", value, "BOOKID");
            return (Criteria) this;
        }

        public Criteria andBOOKIDIn(List<String> values) {
            addCriterion("BOOKID in", values, "BOOKID");
            return (Criteria) this;
        }

        public Criteria andBOOKIDNotIn(List<String> values) {
            addCriterion("BOOKID not in", values, "BOOKID");
            return (Criteria) this;
        }

        public Criteria andBOOKIDBetween(String value1, String value2) {
            addCriterion("BOOKID between", value1, value2, "BOOKID");
            return (Criteria) this;
        }

        public Criteria andBOOKIDNotBetween(String value1, String value2) {
            addCriterion("BOOKID not between", value1, value2, "BOOKID");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated do_not_delete_during_merge Thu Nov 02 09:52:07 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
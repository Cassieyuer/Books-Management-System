package com.etoak.book.books.po.scott;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class BookExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SCOTT.BOOK
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SCOTT.BOOK
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SCOTT.BOOK
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOK
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public BookExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOK
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOK
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOK
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOK
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOK
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOK
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOK
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOK
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOK
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOK
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SCOTT.BOOK
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIDIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIDIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIDEqualTo(String value) {
            addCriterion("ID =", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotEqualTo(String value) {
            addCriterion("ID <>", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThan(String value) {
            addCriterion("ID >", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThan(String value) {
            addCriterion("ID <", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLike(String value) {
            addCriterion("ID like", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotLike(String value) {
            addCriterion("ID not like", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDIn(List<String> values) {
            addCriterion("ID in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotIn(List<String> values) {
            addCriterion("ID not in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andNAMEIsNull() {
            addCriterion("NAME is null");
            return (Criteria) this;
        }

        public Criteria andNAMEIsNotNull() {
            addCriterion("NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNAMEEqualTo(String value) {
            addCriterion("NAME =", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotEqualTo(String value) {
            addCriterion("NAME <>", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEGreaterThan(String value) {
            addCriterion("NAME >", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMELessThan(String value) {
            addCriterion("NAME <", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMELessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMELike(String value) {
            addCriterion("NAME like", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotLike(String value) {
            addCriterion("NAME not like", value, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEIn(List<String> values) {
            addCriterion("NAME in", values, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotIn(List<String> values) {
            addCriterion("NAME not in", values, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMEBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "NAME");
            return (Criteria) this;
        }

        public Criteria andNAMENotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "NAME");
            return (Criteria) this;
        }

        public Criteria andPRICEIsNull() {
            addCriterion("PRICE is null");
            return (Criteria) this;
        }

        public Criteria andPRICEIsNotNull() {
            addCriterion("PRICE is not null");
            return (Criteria) this;
        }

        public Criteria andPRICEEqualTo(Integer value) {
            addCriterion("PRICE =", value, "PRICE");
            return (Criteria) this;
        }

        public Criteria andPRICENotEqualTo(Integer value) {
            addCriterion("PRICE <>", value, "PRICE");
            return (Criteria) this;
        }

        public Criteria andPRICEGreaterThan(Integer value) {
            addCriterion("PRICE >", value, "PRICE");
            return (Criteria) this;
        }

        public Criteria andPRICEGreaterThanOrEqualTo(Integer value) {
            addCriterion("PRICE >=", value, "PRICE");
            return (Criteria) this;
        }

        public Criteria andPRICELessThan(Integer value) {
            addCriterion("PRICE <", value, "PRICE");
            return (Criteria) this;
        }

        public Criteria andPRICELessThanOrEqualTo(Integer value) {
            addCriterion("PRICE <=", value, "PRICE");
            return (Criteria) this;
        }

        public Criteria andPRICEIn(List<Integer> values) {
            addCriterion("PRICE in", values, "PRICE");
            return (Criteria) this;
        }

        public Criteria andPRICENotIn(List<Integer> values) {
            addCriterion("PRICE not in", values, "PRICE");
            return (Criteria) this;
        }

        public Criteria andPRICEBetween(Integer value1, Integer value2) {
            addCriterion("PRICE between", value1, value2, "PRICE");
            return (Criteria) this;
        }

        public Criteria andPRICENotBetween(Integer value1, Integer value2) {
            addCriterion("PRICE not between", value1, value2, "PRICE");
            return (Criteria) this;
        }

        public Criteria andAUTHORIsNull() {
            addCriterion("AUTHOR is null");
            return (Criteria) this;
        }

        public Criteria andAUTHORIsNotNull() {
            addCriterion("AUTHOR is not null");
            return (Criteria) this;
        }

        public Criteria andAUTHOREqualTo(String value) {
            addCriterion("AUTHOR =", value, "AUTHOR");
            return (Criteria) this;
        }

        public Criteria andAUTHORNotEqualTo(String value) {
            addCriterion("AUTHOR <>", value, "AUTHOR");
            return (Criteria) this;
        }

        public Criteria andAUTHORGreaterThan(String value) {
            addCriterion("AUTHOR >", value, "AUTHOR");
            return (Criteria) this;
        }

        public Criteria andAUTHORGreaterThanOrEqualTo(String value) {
            addCriterion("AUTHOR >=", value, "AUTHOR");
            return (Criteria) this;
        }

        public Criteria andAUTHORLessThan(String value) {
            addCriterion("AUTHOR <", value, "AUTHOR");
            return (Criteria) this;
        }

        public Criteria andAUTHORLessThanOrEqualTo(String value) {
            addCriterion("AUTHOR <=", value, "AUTHOR");
            return (Criteria) this;
        }

        public Criteria andAUTHORLike(String value) {
            addCriterion("AUTHOR like", value, "AUTHOR");
            return (Criteria) this;
        }

        public Criteria andAUTHORNotLike(String value) {
            addCriterion("AUTHOR not like", value, "AUTHOR");
            return (Criteria) this;
        }

        public Criteria andAUTHORIn(List<String> values) {
            addCriterion("AUTHOR in", values, "AUTHOR");
            return (Criteria) this;
        }

        public Criteria andAUTHORNotIn(List<String> values) {
            addCriterion("AUTHOR not in", values, "AUTHOR");
            return (Criteria) this;
        }

        public Criteria andAUTHORBetween(String value1, String value2) {
            addCriterion("AUTHOR between", value1, value2, "AUTHOR");
            return (Criteria) this;
        }

        public Criteria andAUTHORNotBetween(String value1, String value2) {
            addCriterion("AUTHOR not between", value1, value2, "AUTHOR");
            return (Criteria) this;
        }

        public Criteria andPUBLISHDATEIsNull() {
            addCriterion("PUBLISHDATE is null");
            return (Criteria) this;
        }

        public Criteria andPUBLISHDATEIsNotNull() {
            addCriterion("PUBLISHDATE is not null");
            return (Criteria) this;
        }

        public Criteria andPUBLISHDATEEqualTo(Date value) {
            addCriterion("PUBLISHDATE =", value, "PUBLISHDATE");
            return (Criteria) this;
        }

        public Criteria andPUBLISHDATENotEqualTo(Date value) {
            addCriterion("PUBLISHDATE <>", value, "PUBLISHDATE");
            return (Criteria) this;
        }

        public Criteria andPUBLISHDATEGreaterThan(Date value) {
            addCriterion("PUBLISHDATE >", value, "PUBLISHDATE");
            return (Criteria) this;
        }

        public Criteria andPUBLISHDATEGreaterThanOrEqualTo(Date value) {
            addCriterion("PUBLISHDATE >=", value, "PUBLISHDATE");
            return (Criteria) this;
        }

        public Criteria andPUBLISHDATELessThan(Date value) {
            addCriterion("PUBLISHDATE <", value, "PUBLISHDATE");
            return (Criteria) this;
        }

        public Criteria andPUBLISHDATELessThanOrEqualTo(Date value) {
            addCriterion("PUBLISHDATE <=", value, "PUBLISHDATE");
            return (Criteria) this;
        }

        public Criteria andPUBLISHDATEIn(List<Date> values) {
            addCriterion("PUBLISHDATE in", values, "PUBLISHDATE");
            return (Criteria) this;
        }

        public Criteria andPUBLISHDATENotIn(List<Date> values) {
            addCriterion("PUBLISHDATE not in", values, "PUBLISHDATE");
            return (Criteria) this;
        }

        public Criteria andPUBLISHDATEBetween(Date value1, Date value2) {
            addCriterion("PUBLISHDATE between", value1, value2, "PUBLISHDATE");
            return (Criteria) this;
        }

        public Criteria andPUBLISHDATENotBetween(Date value1, Date value2) {
            addCriterion("PUBLISHDATE not between", value1, value2, "PUBLISHDATE");
            return (Criteria) this;
        }

        public Criteria andSTATUSIsNull() {
            addCriterion("STATUS is null");
            return (Criteria) this;
        }

        public Criteria andSTATUSIsNotNull() {
            addCriterion("STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andSTATUSEqualTo(String value) {
            addCriterion("STATUS =", value, "STATUS");
            return (Criteria) this;
        }

        public Criteria andSTATUSNotEqualTo(String value) {
            addCriterion("STATUS <>", value, "STATUS");
            return (Criteria) this;
        }

        public Criteria andSTATUSGreaterThan(String value) {
            addCriterion("STATUS >", value, "STATUS");
            return (Criteria) this;
        }

        public Criteria andSTATUSGreaterThanOrEqualTo(String value) {
            addCriterion("STATUS >=", value, "STATUS");
            return (Criteria) this;
        }

        public Criteria andSTATUSLessThan(String value) {
            addCriterion("STATUS <", value, "STATUS");
            return (Criteria) this;
        }

        public Criteria andSTATUSLessThanOrEqualTo(String value) {
            addCriterion("STATUS <=", value, "STATUS");
            return (Criteria) this;
        }

        public Criteria andSTATUSLike(String value) {
            addCriterion("STATUS like", value, "STATUS");
            return (Criteria) this;
        }

        public Criteria andSTATUSNotLike(String value) {
            addCriterion("STATUS not like", value, "STATUS");
            return (Criteria) this;
        }

        public Criteria andSTATUSIn(List<String> values) {
            addCriterion("STATUS in", values, "STATUS");
            return (Criteria) this;
        }

        public Criteria andSTATUSNotIn(List<String> values) {
            addCriterion("STATUS not in", values, "STATUS");
            return (Criteria) this;
        }

        public Criteria andSTATUSBetween(String value1, String value2) {
            addCriterion("STATUS between", value1, value2, "STATUS");
            return (Criteria) this;
        }

        public Criteria andSTATUSNotBetween(String value1, String value2) {
            addCriterion("STATUS not between", value1, value2, "STATUS");
            return (Criteria) this;
        }

        public Criteria andCATEGORYIDIsNull() {
            addCriterion("CATEGORYID is null");
            return (Criteria) this;
        }

        public Criteria andCATEGORYIDIsNotNull() {
            addCriterion("CATEGORYID is not null");
            return (Criteria) this;
        }

        public Criteria andCATEGORYIDEqualTo(String value) {
            addCriterion("CATEGORYID =", value, "CATEGORYID");
            return (Criteria) this;
        }

        public Criteria andCATEGORYIDNotEqualTo(String value) {
            addCriterion("CATEGORYID <>", value, "CATEGORYID");
            return (Criteria) this;
        }

        public Criteria andCATEGORYIDGreaterThan(String value) {
            addCriterion("CATEGORYID >", value, "CATEGORYID");
            return (Criteria) this;
        }

        public Criteria andCATEGORYIDGreaterThanOrEqualTo(String value) {
            addCriterion("CATEGORYID >=", value, "CATEGORYID");
            return (Criteria) this;
        }

        public Criteria andCATEGORYIDLessThan(String value) {
            addCriterion("CATEGORYID <", value, "CATEGORYID");
            return (Criteria) this;
        }

        public Criteria andCATEGORYIDLessThanOrEqualTo(String value) {
            addCriterion("CATEGORYID <=", value, "CATEGORYID");
            return (Criteria) this;
        }

        public Criteria andCATEGORYIDLike(String value) {
            addCriterion("CATEGORYID like", value, "CATEGORYID");
            return (Criteria) this;
        }

        public Criteria andCATEGORYIDNotLike(String value) {
            addCriterion("CATEGORYID not like", value, "CATEGORYID");
            return (Criteria) this;
        }

        public Criteria andCATEGORYIDIn(List<String> values) {
            addCriterion("CATEGORYID in", values, "CATEGORYID");
            return (Criteria) this;
        }

        public Criteria andCATEGORYIDNotIn(List<String> values) {
            addCriterion("CATEGORYID not in", values, "CATEGORYID");
            return (Criteria) this;
        }

        public Criteria andCATEGORYIDBetween(String value1, String value2) {
            addCriterion("CATEGORYID between", value1, value2, "CATEGORYID");
            return (Criteria) this;
        }

        public Criteria andCATEGORYIDNotBetween(String value1, String value2) {
            addCriterion("CATEGORYID not between", value1, value2, "CATEGORYID");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SCOTT.BOOK
     *
     * @mbggenerated do_not_delete_during_merge Thu Nov 02 09:52:07 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SCOTT.BOOK
     *
     * @mbggenerated Thu Nov 02 09:52:07 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}